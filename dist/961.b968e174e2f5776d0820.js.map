{"version":3,"file":"961.b968e174e2f5776d0820.js","mappings":"+MAIA,MAAMA,EAAqB,gBA2B3BC,OAAOC,eAAe,kBAAyB,gBAAiB,CAC5DC,IAAK,WACD,OAAOC,KAAKC,gBAEhBC,IAAK,SAEDC,GAEAH,KAAKC,eAAiBE,GAE1BC,YAAY,EACZC,cAAc,IAGlB,sCACI,WACI,OAAIL,KAAKC,iBAITD,KAAKC,eAAiB,IAAI,EAAAK,cAAcN,OAH7BA,KAAKC,gBAQxB,uCAA+C,W,MACxB,QAAnB,EAAAD,KAAKC,sBAAc,SAAEM,UACrBP,KAAKC,eAAiB,MAOnB,MAAMO,EAeTC,YAAYC,GAXI,KAAAC,KAAOf,EAYnBI,KAAKU,MAAQA,EAMVE,WACHZ,KAAKU,MAAMG,sCAAsCC,aAnFC,EAqF9Cd,KACAA,KAAKe,kCAETf,KAAKU,MAAMM,sBAAsBF,aAvFE,EAyF/Bd,KACAA,KAAKiB,kBAILF,mC,MACoB,QAAxB,EAAAf,KAAKU,MAAMQ,qBAAa,SAAEC,oBAGtBF,iBAAiBG,G,MACG,QAAxB,EAAApB,KAAKU,MAAMQ,qBAAa,SAAEG,QAAQD,GAO/BE,UACCtB,KAAKU,MAAMT,iBAEXD,KAAKU,MAAMa,uBAGXvB,KAAKU,MAAMc,uBAOZjB,UACHP,KAAKU,MAAMa,wBAInB,EAAAjB,cAAA,8BAA+CI,IAC3C,IAAIe,EAAYf,EAAMgB,cAClB9B,GAEC6B,IACDA,EAAY,IAAIjB,EAA4BE,GAC5CA,EAAMiB,cAAcF","sources":["webpack://babylonjs-fluid-rendering/./src/scenes/FluidRenderer/fluidRendererSceneComponent.ts"],"sourcesContent":["import * as BABYLON from \"@babylonjs/core\";\r\n\r\nimport { FluidRenderer } from \"./fluidRenderer\";\r\n\r\nconst NAME_FLUIDRENDERER = \"FluidRenderer\";\r\nconst STEP_GATHERACTIVECAMERARENDERTARGET_FLUIDRENDERER = 1;\r\nconst STEP_AFTERCAMERADRAW_FLUIDRENDERER = 5;\r\n\r\ndeclare module \"@babylonjs/core/abstractScene\" {\r\n    export interface AbstractScene {\r\n        /** @hidden (Backing field) */\r\n        _fluidRenderer: BABYLON.Nullable<FluidRenderer>;\r\n\r\n        /**\r\n         * Gets or Sets the fluid renderer associated to the scene.\r\n         */\r\n        fluidRenderer: BABYLON.Nullable<FluidRenderer>;\r\n\r\n        /**\r\n         * Enables the fluid renderer and associates it with the scene\r\n         * @returns the FluidRenderer\r\n         */\r\n        enableFluidRenderer(): BABYLON.Nullable<FluidRenderer>;\r\n\r\n        /**\r\n         * Disables the fluid renderer associated with the scene\r\n         */\r\n        disableFluidRenderer(): void;\r\n    }\r\n}\r\n\r\nObject.defineProperty(BABYLON.Scene.prototype, \"fluidRenderer\", {\r\n    get: function (this: BABYLON.Scene) {\r\n        return this._fluidRenderer;\r\n    },\r\n    set: function (\r\n        this: BABYLON.Scene,\r\n        value: BABYLON.Nullable<FluidRenderer>\r\n    ) {\r\n        this._fluidRenderer = value;\r\n    },\r\n    enumerable: true,\r\n    configurable: true,\r\n});\r\n\r\nBABYLON.Scene.prototype.enableFluidRenderer =\r\n    function (): BABYLON.Nullable<FluidRenderer> {\r\n        if (this._fluidRenderer) {\r\n            return this._fluidRenderer;\r\n        }\r\n\r\n        this._fluidRenderer = new FluidRenderer(this);\r\n\r\n        return this._fluidRenderer;\r\n    };\r\n\r\nBABYLON.Scene.prototype.disableFluidRenderer = function (): void {\r\n    this._fluidRenderer?.dispose();\r\n    this._fluidRenderer = null;\r\n};\r\n\r\n/**\r\n * Defines the Geometry Buffer scene component responsible to manage a G-Buffer useful\r\n * in several rendering techniques.\r\n */\r\nexport class FluidRendererSceneComponent implements BABYLON.ISceneComponent {\r\n    /**\r\n     * The component name helpful to identify the component in the list of scene components.\r\n     */\r\n    public readonly name = NAME_FLUIDRENDERER;\r\n\r\n    /**\r\n     * The scene the component belongs to.\r\n     */\r\n    public scene: BABYLON.Scene;\r\n\r\n    /**\r\n     * Creates a new instance of the component for the given scene\r\n     * @param scene Defines the scene to register the component in\r\n     */\r\n    constructor(scene: BABYLON.Scene) {\r\n        this.scene = scene;\r\n    }\r\n\r\n    /**\r\n     * Registers the component in a given scene\r\n     */\r\n    public register(): void {\r\n        this.scene._gatherActiveCameraRenderTargetsStage.registerStep(\r\n            STEP_GATHERACTIVECAMERARENDERTARGET_FLUIDRENDERER,\r\n            this,\r\n            this._gatherActiveCameraRenderTargets\r\n        );\r\n        this.scene._afterCameraDrawStage.registerStep(\r\n            STEP_AFTERCAMERADRAW_FLUIDRENDERER,\r\n            this,\r\n            this._afterCameraDraw\r\n        );\r\n    }\r\n\r\n    private _gatherActiveCameraRenderTargets(/*renderTargets: BABYLON.SmartArrayNoDuplicate<BABYLON.RenderTargetTexture>*/): void {\r\n        this.scene.fluidRenderer?._prepareRendering();\r\n    }\r\n\r\n    private _afterCameraDraw(camera: BABYLON.Camera) {\r\n        this.scene.fluidRenderer?._render(camera);\r\n    }\r\n\r\n    /**\r\n     * Rebuilds the elements related to this component in case of\r\n     * context lost for instance.\r\n     */\r\n    public rebuild(): void {\r\n        if (this.scene._fluidRenderer) {\r\n            // Release resources first\r\n            this.scene.disableFluidRenderer();\r\n\r\n            // Re-enable\r\n            this.scene.enableFluidRenderer();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Disposes the component and the associated resources\r\n     */\r\n    public dispose(): void {\r\n        this.scene.disableFluidRenderer();\r\n    }\r\n}\r\n\r\nFluidRenderer._SceneComponentInitialization = (scene: BABYLON.Scene) => {\r\n    let component = scene._getComponent(\r\n        NAME_FLUIDRENDERER\r\n    ) as FluidRendererSceneComponent;\r\n    if (!component) {\r\n        component = new FluidRendererSceneComponent(scene);\r\n        scene._addComponent(component);\r\n    }\r\n};\r\n"],"names":["NAME_FLUIDRENDERER","Object","defineProperty","get","this","_fluidRenderer","set","value","enumerable","configurable","FluidRenderer","dispose","FluidRendererSceneComponent","constructor","scene","name","register","_gatherActiveCameraRenderTargetsStage","registerStep","_gatherActiveCameraRenderTargets","_afterCameraDrawStage","_afterCameraDraw","fluidRenderer","_prepareRendering","camera","_render","rebuild","disableFluidRenderer","enableFluidRenderer","component","_getComponent","_addComponent"],"sourceRoot":""}