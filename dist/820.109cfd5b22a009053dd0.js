"use strict";(self.webpackChunkbabylonjs_fluid_rendering=self.webpackChunkbabylonjs_fluid_rendering||[]).push([[820,692,42,287,282,179],{5692:(e,t,i)=>{i.r(t),i.d(t,{FluidRendererGUI:()=>n});var s=i(6291),r=i(1063),a=i(7419);class n{constructor(e,t=!0){this._scene=e,this._showGeneralMenu=t,this._visible=!0,this._onKeyObserver=null,this._targetRendererIndex=0,this._targetRenderersGUIElements=[],this._renderObjectIndex=0,this._renderObjectsGUIElements=[],this._gui=null,this.initialize()}set visible(e){e!==this._visible&&(this._visible=e,this._gui&&(this._gui.domElement.style.display=e?"":"none"))}dispose(){const e=document.getElementById("datGUI");null!==e&&(e.remove(),this._gui=null),this._scene.onKeyboardObservable.remove(this._onKeyObserver),this._onKeyObserver=null}_setupKeyboard(){this._onKeyObserver=this._scene.onKeyboardObservable.add((e=>{switch(e.type){case s.KeyboardEventTypes.KEYDOWN:break;case s.KeyboardEventTypes.KEYUP:"F8"===e.event.key&&(this.visible=!this._visible)}}))}initialize(){this.dispose(),this._gui=new r.XS({title:"Fluid Rendering"}),this._gui.domElement.style.marginTop="60px",this._gui.domElement.id="datGUI",this._setupKeyboard(),this._showGeneralMenu&&this._makeMenuGeneral(),this._makeMenuTargetRenderers(),this._makeMenuRenderObjects()}_addList(e,t,i,s,r){return e.add(t,i,r).name(s).onChange((e=>{this._parameterChanged(i,e)}))}_addCheckbox(e,t,i,s){return e.add(t,i).name(s).onChange((e=>{this._parameterChanged(i,e)}))}_addSlider(e,t,i,s,r,a,n){return e.add(t,i,r,a,n).name(s).onChange((e=>{this._parameterChanged(i,e)}))}_addColor(e,t,i,s){return e.addColor(t,i).name(s).onChange((e=>{this._parameterChanged(i,e)}))}_makeMenuGeneral(){if(!this._gui)return;const e={enable:this._parameterRead("enable")},t=this._gui.addFolder("General");t.$title.style.fontWeight="bold",this._addCheckbox(t,e,"enable","Enable fluid renderer"),t.open()}_makeMenuTargetRenderers(){var e,t;if(!this._gui||null===(t=null===(e=this._scene.fluidRenderer)||void 0===e?void 0:e.targetRenderers.length)||void 0===t||!t)return;const i={targets_index:this._parameterRead("targets_index"),targets_generateDiffuseTexture:this._parameterRead("targets_generateDiffuseTexture"),targets_fluidColor:this._parameterRead("targets_fluidColor"),targets_density:this._parameterRead("targets_density"),targets_refractionStrength:this._parameterRead("targets_refractionStrength"),targets_fresnelClamp:this._parameterRead("targets_fresnelClamp"),targets_specularPower:this._parameterRead("targets_specularPower"),targets_minimumThickness:this._parameterRead("targets_minimumThickness"),targets_debug:this._parameterRead("targets_debug"),targets_debugFeature:this._parameterRead("targets_debugFeature"),targets_enableBlurDepth:this._parameterRead("targets_enableBlurDepth"),targets_blurDepthSizeDivisor:this._parameterRead("targets_blurDepthSizeDivisor"),targets_blurDepthFilterSize:this._parameterRead("targets_blurDepthFilterSize"),targets_blurDepthNumIterations:this._parameterRead("targets_blurDepthNumIterations"),targets_blurDepthMaxFilterSize:this._parameterRead("targets_blurDepthMaxFilterSize"),targets_blurDepthDepthScale:this._parameterRead("targets_blurDepthDepthScale"),targets_enableBlurThickness:this._parameterRead("targets_enableBlurThickness"),targets_blurThicknessSizeDivisor:this._parameterRead("targets_blurThicknessSizeDivisor"),targets_blurThicknessFilterSize:this._parameterRead("targets_blurThicknessFilterSize"),targets_blurThicknessNumIterations:this._parameterRead("targets_blurThicknessNumIterations"),targets_depthMapSize:this._parameterRead("targets_depthMapSize"),targets_thicknessMapSize:this._parameterRead("targets_thicknessMapSize"),targets_diffuseMapSize:this._parameterRead("targets_diffuseMapSize"),targets_useVelocity:this._parameterRead("targets_useVelocity"),targets_useFixedThickness:this._parameterRead("targets_useFixedThickness")},s=this._gui.addFolder("Target renderers");s.$title.style.fontWeight="bold";const r=[];if(this._scene.fluidRenderer)for(let e=0;e<this._scene.fluidRenderer.targetRenderers.length;++e)r.push(e);this._addList(s,i,"targets_index","Index",r),this._targetRenderersGUIElements.push(this._addList(s,i,"targets_depthMapSize","Depth map size",["Screen size",256,512,1024,2048,4096])),this._targetRenderersGUIElements.push(this._addList(s,i,"targets_thicknessMapSize","Thickness map size",["Screen size",64,128,256,512,1024,2048])),this._targetRenderersGUIElements.push(this._addList(s,i,"targets_diffuseMapSize","Diffuse map size",["Screen size",256,512,1024,2048,4096])),this._targetRenderersGUIElements.push(this._addSlider(s,i,"targets_minimumThickness","Minimum thickness",0,3,.001)),this._targetRenderersGUIElements.push(this._addCheckbox(s,i,"targets_useFixedThickness","Use fixed thickness")),this._targetRenderersGUIElements.push(this._addCheckbox(s,i,"targets_useVelocity","Use velocity"));const n=s.addFolder("Color");n.$title.style.fontStyle="italic",this._targetRenderersGUIElements.push(this._addCheckbox(n,i,"targets_generateDiffuseTexture","Generate diffuse texture")),this._targetRenderersGUIElements.push(this._addColor(n,i,"targets_fluidColor","Fluid color")),this._targetRenderersGUIElements.push(this._addSlider(n,i,"targets_density","Density",0,20,.01)),this._targetRenderersGUIElements.push(this._addSlider(n,i,"targets_refractionStrength","Refraction strength",0,.3,.005)),this._targetRenderersGUIElements.push(this._addSlider(n,i,"targets_fresnelClamp","Fresnel clamp",0,1,.005)),this._targetRenderersGUIElements.push(this._addSlider(n,i,"targets_specularPower","Specular power",1,5e3,5));const o=s.addFolder("Blur Depth");o.$title.style.fontStyle="italic",this._targetRenderersGUIElements.push(this._addCheckbox(o,i,"targets_enableBlurDepth","Enable")),this._targetRenderersGUIElements.push(this._addSlider(o,i,"targets_blurDepthSizeDivisor","Size divisor",1,10,1)),this._targetRenderersGUIElements.push(this._addSlider(o,i,"targets_blurDepthFilterSize","Filter size",1,20,1)),this._targetRenderersGUIElements.push(this._addSlider(o,i,"targets_blurDepthNumIterations","Num iterations",1,10,1)),this._targetRenderersGUIElements.push(this._addSlider(o,i,"targets_blurDepthMaxFilterSize","Max filter size",1,100,1)),this._targetRenderersGUIElements.push(this._addSlider(o,i,"targets_blurDepthDepthScale","Depth scale",0,100,.01));const l=s.addFolder("Blur Thickness");l.$title.style.fontStyle="italic",this._targetRenderersGUIElements.push(this._addCheckbox(l,i,"targets_enableBlurThickness","Enable")),this._targetRenderersGUIElements.push(this._addSlider(l,i,"targets_blurThicknessSizeDivisor","Size divisor",1,10,1)),this._targetRenderersGUIElements.push(this._addSlider(l,i,"targets_blurThicknessFilterSize","Filter size",1,20,1)),this._targetRenderersGUIElements.push(this._addSlider(l,i,"targets_blurThicknessNumIterations","Num iterations",1,10,1));const h=s.addFolder("Debug");h.$title.style.fontStyle="italic",this._targetRenderersGUIElements.push(this._addCheckbox(h,i,"targets_debug","Enable")),this._targetRenderersGUIElements.push(this._addList(h,i,"targets_debugFeature","Feature",Object.keys(a.FluidRenderingDebug).filter((e=>isNaN(Number(e)))))),s.open()}_makeMenuRenderObjects(){var e,t;if(!this._gui||null===(t=null===(e=this._scene.fluidRenderer)||void 0===e?void 0:e.renderObjects.length)||void 0===t||!t)return;const i={objects_index:this._parameterRead("objects_index"),objects_particleSize:this._parameterRead("objects_particleSize"),objects_particleThicknessAlpha:this._parameterRead("objects_particleThicknessAlpha")},s=this._gui.addFolder("Render objects");s.$title.style.fontWeight="bold";const r=[];if(this._scene.fluidRenderer)for(let e=0;e<this._scene.fluidRenderer.renderObjects.length;++e)r.push(e);this._addList(s,i,"objects_index","Index",r),this._renderObjectsGUIElements.push(this._addSlider(s,i,"objects_particleSize","Particle size",0,2,.001)),this._renderObjectsGUIElements.push(this._addSlider(s,i,"objects_particleThicknessAlpha","Particle alpha",0,1,.001))}_readValue(e,t){const i=t.split("_");for(let t=0;t<i.length;++t){const r=i[t];(e=e[i[t]])instanceof s.Color3&&(e=e.toHexString()),"debugFeature"===r&&(e=a.FluidRenderingDebug[e]),r.endsWith("MapSize")&&null===e&&(e="Screen size")}return e}_setValue(e,t,i){const s=t.split("_");for(let t=0;t<s.length-1;++t)e=e[s[t]],s[t].endsWith("MapSize")&&"Screen size"===i&&(i=null);s[s.length-1].endsWith("MapSize")&&"Screen size"===i&&(i=null),e[s[s.length-1]]=i}_parameterRead(e){const t=this._scene.fluidRenderer;return"enable"===e?!!this._scene.fluidRenderer:e.startsWith("targets_")?"index"===(e=e.substring(8))?this._targetRendererIndex:t?this._readValue(t.targetRenderers[this._targetRendererIndex],e):"":e.startsWith("objects_")?"index"===(e=e.substring(8))?this._renderObjectIndex:t?this._readValue(t.renderObjects[this._renderObjectIndex].object,e):"":void 0}_fillValues(e,t){for(let i=0;i<e.length;++i){const s=e[i],r=s.property.split("_")[1];s.object[s.property]=this._readValue(t,r),s.updateDisplay()}}syncGUI(){const e=this._scene.fluidRenderer;e&&(this._fillValues(this._targetRenderersGUIElements,e.targetRenderers[this._targetRendererIndex]),this._fillValues(this._renderObjectsGUIElements,e.renderObjects[this._renderObjectIndex].object))}_parameterChanged(e,t){const i=this._scene.fluidRenderer;switch(e){case"enable":return void(t?(this._scene.enableFluidRenderer(),this._targetRendererIndex=0,this.initialize()):(this._scene.disableFluidRenderer(),this._targetRendererIndex=0,this.initialize()));case"targets_fluidColor":return void(i&&i.targetRenderers.length>this._targetRendererIndex&&i.targetRenderers[this._targetRendererIndex].fluidColor.copyFrom(s.Color3.FromHexString(t)));case"targets_debugFeature":{const e=t,s=a.FluidRenderingDebug[e];return void(i&&i.targetRenderers.length>this._targetRendererIndex&&(i.targetRenderers[this._targetRendererIndex].debugFeature=s))}}e.startsWith("targets_")&&("index"===(e=e.substring(8))?(this._targetRendererIndex=t||0,i&&this._fillValues(this._targetRenderersGUIElements,i.targetRenderers[this._targetRendererIndex])):i&&this._setValue(i.targetRenderers[this._targetRendererIndex],e,!1!==t&&(!0===t||(isNaN(t)?t:parseFloat(t))))),e.startsWith("objects_")&&("index"===(e=e.substring(8))?(this._renderObjectIndex=t||0,i&&this._fillValues(this._renderObjectsGUIElements,i.renderObjects[this._renderObjectIndex].object)):i&&this._setValue(i.renderObjects[this._renderObjectIndex].object,e,!1!==t&&(!0===t||(isNaN(t)?t:parseFloat(t)))))}}},4042:(e,t,i)=>{i.r(t),i.d(t,{FluidSimulator:()=>a});var s=i(6291),r=i(3287);class a{constructor(e,t,i=1){this._smoothingRadius=.2,this.densityReference=2e3,this.pressureConstant=20,this.viscosity=.005,this.gravity=new s.Vector3(0,-9.8,0),this.minTimeStep=.01,this.maxVelocity=75,this.maxAcceleration=2e3,this._positions=void 0,this._velocities=void 0,this._particles=[],this._numMaxParticles=0,this._mass=i,e&&t&&this.setParticleData(e,t),this._hash=new r.Hash(this._smoothingRadius,this._numMaxParticles),this.currentNumParticles=this._numMaxParticles,this._smoothingRadius2=0,this._poly6Constant=0,this._spikyConstant=0,this._viscConstant=0,this._computeConstants()}get smoothingRadius(){return this._smoothingRadius}set smoothingRadius(e){this._smoothingRadius=e,this._computeConstants()}get mass(){return this._mass}set mass(e){for(let t=0;t<this._particles.length;++t)this._particles[t].mass=e}_computeConstants(){this._smoothingRadius2=this._smoothingRadius*this._smoothingRadius,this._poly6Constant=315/(64*Math.PI*Math.pow(this._smoothingRadius,9)),this._spikyConstant=-45/(Math.PI*Math.pow(this._smoothingRadius,6)),this._viscConstant=45/(Math.PI*Math.pow(this._smoothingRadius,6)),this._hash=new r.Hash(this._smoothingRadius,this._numMaxParticles)}get positions(){return this._positions}get velocities(){return this._velocities}get numMaxParticles(){return this._numMaxParticles}setParticleData(e,t){this._positions=null!=e?e:new Float32Array,this._velocities=null!=t?t:new Float32Array,this._numMaxParticles=this._positions.length/3,this._hash=new r.Hash(this._smoothingRadius,this._numMaxParticles);for(let e=this._particles.length;e<this._numMaxParticles;++e)this._particles.push({mass:this.mass,density:0,pressure:0,accelX:0,accelY:0,accelZ:0})}update(e){let t=e;for(;t>0;){this._hash.create(this._positions,this.currentNumParticles),this._computeDensityAndPressure(),this._computeAcceleration();let e=this._calculateTimeStep();t-=e,t<0&&(e+=t,t=0),this._updatePositions(e)}}dispose(){}_computeDensityAndPressure(){for(let e=0;e<this.currentNumParticles;++e){const t=this._particles[e],i=this._positions[3*e+0],s=this._positions[3*e+1],r=this._positions[3*e+2];t.density=0,this._hash.query(this._positions,e,this._smoothingRadius);for(let e=0;e<this._hash.querySize;++e){const a=this._hash.queryIds[e],n=i-this._positions[3*a+0],o=s-this._positions[3*a+1],l=r-this._positions[3*a+2],h=n*n+o*o+l*l;if(h<this._smoothingRadius2){const e=this._poly6Constant*Math.pow(this._smoothingRadius2-h,3);t.density+=e}}t.density=Math.max(this.densityReference,t.density),t.pressure=this.pressureConstant*(t.density-this.densityReference)}}_computeAcceleration(){for(let e=0;e<this.currentNumParticles;++e){const t=this._particles[e],i=this._positions[3*e+0],s=this._positions[3*e+1],r=this._positions[3*e+2],a=this._velocities[3*e+0],n=this._velocities[3*e+1],o=this._velocities[3*e+2];let l=0,h=0,c=0,d=0,u=0,_=0;this._hash.query(this._positions,e,this._smoothingRadius);for(let e=0;e<this._hash.querySize;++e){const m=this._hash.queryIds[e];let p=i-this._positions[3*m+0],g=s-this._positions[3*m+1],f=r-this._positions[3*m+2];const b=p*p+g*g+f*f,v=Math.sqrt(b);if(v>0&&b<this._smoothingRadius2){const e=this._particles[m];p/=v,g/=v,f/=v;const i=this._spikyConstant*(this._smoothingRadius-v)*(this._smoothingRadius-v),s=e.mass/t.mass,r=i*((t.pressure+e.pressure)/(2*t.density*e.density))*s;l-=r*p,h-=r*g,c-=r*f;const b=this._viscConstant*(this._smoothingRadius-v)*(1/e.density)*s*this.viscosity;d+=b*(this._velocities[3*m+0]-a),u+=b*(this._velocities[3*m+1]-n),_+=b*(this._velocities[3*m+2]-o)}}t.accelX=l+d,t.accelY=h+u,t.accelZ=c+_,t.accelX+=this.gravity.x,t.accelY+=this.gravity.y,t.accelZ+=this.gravity.z;const m=Math.sqrt(t.accelX*t.accelX+t.accelY*t.accelY+t.accelZ*t.accelZ);m>this.maxAcceleration&&(t.accelX=t.accelX/m*this.maxAcceleration,t.accelY=t.accelY/m*this.maxAcceleration,t.accelZ=t.accelZ/m*this.maxAcceleration)}}_calculateTimeStep(){let e=0,t=0,i=0;for(let s=0;s<this.currentNumParticles;++s){const r=this._particles[s],a=this._velocities[3*s+0]*this._velocities[3*s+0]+this._velocities[3*s+1]*this._velocities[3*s+1]+this._velocities[3*s+2]*this._velocities[3*s+2],n=r.accelX*r.accelX+r.accelY*r.accelY+r.accelZ*r.accelZ,o=r.density<1e-5?0:r.pressure/r.density;a>e&&(e=a),n>t&&(t=n),o>i&&(i=o)}e=Math.sqrt(e),t=Math.sqrt(t),i=Math.sqrt(i);const s=.4*this.smoothingRadius/Math.max(1,e),r=.4*Math.sqrt(this.smoothingRadius/t),a=this.smoothingRadius/i;return Math.max(this.minTimeStep,Math.min(s,r,a))}_updatePositions(e){for(let t=0;t<this.currentNumParticles;++t){const i=this._particles[t];this._velocities[3*t+0]+=i.accelX*e,this._velocities[3*t+1]+=i.accelY*e,this._velocities[3*t+2]+=i.accelZ*e;const s=Math.sqrt(this._velocities[3*t+0]*this._velocities[3*t+0]+this._velocities[3*t+1]*this._velocities[3*t+1]+this._velocities[3*t+2]*this._velocities[3*t+2]);s>this.maxVelocity&&(this._velocities[3*t+0]=this._velocities[3*t+0]/s*this.maxVelocity,this._velocities[3*t+1]=this._velocities[3*t+1]/s*this.maxVelocity,this._velocities[3*t+2]=this._velocities[3*t+2]/s*this.maxVelocity),this._positions[3*t+0]+=e*this._velocities[3*t+0],this._positions[3*t+1]+=e*this._velocities[3*t+1],this._positions[3*t+2]+=e*this._velocities[3*t+2]}}}},3287:(e,t,i)=>{i.r(t),i.d(t,{Hash:()=>s});class s{constructor(e,t){this._spacing=e,this._tableSize=2*t,this._cellStart=new Int32Array(this._tableSize+1),this._cellEntries=new Int32Array(t),this._queryIds=new Int32Array(t),this._querySize=0}get querySize(){return this._querySize}get queryIds(){return this._queryIds}hashCoords(e,t,i){const s=92837111*e^689287499*t^283923481*i;return Math.abs(s)%this._tableSize}intCoord(e){return Math.floor(e/this._spacing)}hashPos(e,t){return this.hashCoords(this.intCoord(e[3*t]),this.intCoord(e[3*t+1]),this.intCoord(e[3*t+2]))}create(e,t){t=null!=t?t:e.length/3;const i=Math.min(t,this._cellEntries.length);this._cellStart.fill(0),this._cellEntries.fill(0);for(let t=0;t<i;t++){const i=this.hashPos(e,t);this._cellStart[i]++}let s=0;for(let e=0;e<this._tableSize;e++)s+=this._cellStart[e],this._cellStart[e]=s;this._cellStart[this._tableSize]=s;for(let t=0;t<i;t++){const i=this.hashPos(e,t);this._cellStart[i]--,this._cellEntries[this._cellStart[i]]=t}}query(e,t,i){const s=this.intCoord(e[3*t]-i),r=this.intCoord(e[3*t+1]-i),a=this.intCoord(e[3*t+2]-i),n=this.intCoord(e[3*t]+i),o=this.intCoord(e[3*t+1]+i),l=this.intCoord(e[3*t+2]+i);this._querySize=0;for(let e=s;e<=n;e++)for(let t=r;t<=o;t++)for(let i=a;i<=l;i++){const s=this.hashCoords(e,t,i),r=this._cellStart[s],a=this._cellStart[s+1];for(let e=r;e<a;e++)this._queryIds[this._querySize]=this._cellEntries[e],this._querySize++}}}},4282:(e,t,i)=>{i.r(t),i.d(t,{ParticleGenerator:()=>r});var s=i(6291);class r{constructor(e,t){this._numParticles=0,this._scene=e,this._currNumParticles=0,this._numCrossSection=0,this._positions=new Float32Array,this._velocities=new Float32Array,this.particleRadius=0,this._loadFromFile=t,this.position=new s.Vector3(0,0,0),this._loadFromFile?this._observer=null:this._observer=e.onBeforeRenderObservable.add((()=>{if(0===this._currNumParticles)this._positions.length/3>=this._numCrossSection&&(this._currNumParticles=this._numCrossSection);else if(this._currNumParticles<this._numParticles){const e=this._positions[3*this._currNumParticles+0],t=this._positions[3*this._currNumParticles+1],i=this._positions[3*this._currNumParticles+2],s=this._positions[3*(this._currNumParticles-this._numCrossSection)+0],r=this._positions[3*(this._currNumParticles-this._numCrossSection)+1],a=this._positions[3*(this._currNumParticles-this._numCrossSection)+2];Math.sqrt((e-s)*(e-s)+(t-r)*(t-r)+(i-a)*(i-a))>2*this.particleRadius&&(this._currNumParticles+=this._numCrossSection)}}))}get currNumParticles(){return this._currNumParticles}get positions(){return this._positions}get velocities(){return this._velocities}async generateParticles(e,t=!0){this._loadFromFile?await this._generateParticlesFromFile(this._loadFromFile):this._generateParticles(e,t)}async _generateParticlesFromFile(e){const t=(await(await fetch(`../src/assets/particles/${e}.txt`)).text()).replace("\r","").split("\n"),i=[],s=[];let r=0;for(let e=1;e<t.length;++e){const a=t[e],n=a.split(",");'"'===a.charAt(0)||n.length<4||(i.push(parseFloat(n[1])+this.position.x,parseFloat(n[2])+ +this.position.y,parseFloat(n[3])+this.position.z),s.push(0,0,0),r++)}if(this._numParticles=this._numCrossSection=r,this._numParticles>this._positions.length/3){const e=new Float32Array(3*this._numParticles),t=new Float32Array(3*this._numParticles);e.set(this._positions,0),t.set(this._velocities,0),this._positions=e,this._velocities=t}this._positions.set(i,0),this._velocities.set(s,0),this._currNumParticles=this._numParticles}_generateParticles(e,t=!0){if(this._numParticles>=e&&!t)return this._numParticles=e,void(this._currNumParticles=Math.min(this._currNumParticles,this._numParticles));const i=[],s=[],r=2*this.particleRadius,a=.1*r,n=()=>Math.random()*a-a/2,o=t?0:this._currNumParticles;for(this._numParticles=o;this._numParticles<=e-this._numCrossSection;){let e=6*r;this._numCrossSection=0;for(let t=1;t<11;++t){const a=t*Math.PI/11;let o=12*Math.sin(a)/2*r;o<0&&(o=0);let l=-o;for(;l<=o;){const t=l===-o||l+r>o?l:l+n(),a=l===-o||l+r>o?e:e+n(),h=l===-o||l+r>o?.49:.49+n();i.push(t+this.position.x,a+this.position.y,h+this.position.z),s.push(.03*(Math.random()-.5),.03*(Math.random()-.5),.03*(Math.random()-1)-1.5),l+=r,this._numParticles++,this._numCrossSection++}e+=r}}if(this._numParticles>this._positions.length/3){const e=new Float32Array(3*this._numParticles),t=new Float32Array(3*this._numParticles);e.set(this._positions,0),t.set(this._velocities,0),this._positions=e,this._velocities=t}this._positions.set(i,3*o),this._velocities.set(s,3*o),this._currNumParticles=o}dispose(){this._scene.onBeforeRenderObservable.remove(this._observer),this._observer=null}}},3179:(e,t,i)=>{i.r(t),i.d(t,{SDFHelper:()=>f});var s=i(6291);const r=i.p+"1927c2ee10e174350b0f2680480bac03.png",a=i.p+"42501ae63687985d3bdf75e684bf30b8.png",n=i.p+"de78498b6fd56d907b099104d11e9a2a.png",o=i.p+"cb9384751f5882e7f6eb9f8d4f333114.png",l=1e-4,h=new s.Vector3(l,-l,-l),c=new s.Vector3(-l,-l,l),d=new s.Vector3(-l,l,-l),u=new s.Vector3(l,l,l),_=new s.Vector3(1,-1,-1),m=new s.Vector3(-1,-1,1),p=new s.Vector3(-1,1,-1),g=new s.Vector3(1,1,1);class f{static CreateBox(e,t,i){const r=s.MeshBuilder.CreateBox("box",{width:2*i.x,height:2*i.y,depth:2*i.z},e),a=new s.PBRMaterial("boxMat",e);return a.metallic=0,a.roughness=.9,a.albedoTexture=new s.Texture("https://playground.babylonjs.com/textures/wood.jpg",e),a.cullBackFaces=!0,r.material=a,Promise.resolve(r)}static CreateSphere(e,t,i){const r=s.MeshBuilder.CreateSphere("sphere",{diameter:2*i,segments:16},e),a=new s.PBRMaterial("sphereMat",e);return a.metallic=1,a.roughness=.05,a.albedoTexture=new s.Texture(o,e),a.cullBackFaces=!0,r.material=a,Promise.resolve(r)}static CreateCutHollowSphere(e,t,i,r,a,n){a/=i;const l=s.MeshBuilder.CreateSphere("sphere",{diameter:2*i,segments:n},e),h=s.MeshBuilder.CreatePlane("plane",{size:2*i},e);h.rotation.y=Math.PI/2,h.position.x=r;const c=s.CSG.FromMesh(l),d=s.CSG.FromMesh(h);l.dispose(),h.dispose(),c.subtractInPlace(d);const u=c.toMesh("sppl");u.computeWorldMatrix(!0),u.refreshBoundingInfo(),u.scaling.setAll(1-a),u.position.x=u.getBoundingInfo().boundingBox.maximumWorld.x*a;const _=s.CSG.FromMesh(u);u.dispose(),c.subtractInPlace(_);const m=c.toMesh("cutHollowSphere");m.rotation.z=Math.PI/2,m.bakeCurrentTransformIntoVertices();const p=new s.PBRMaterial("cutHollowSphereMat",e);return p.metallic=1,p.roughness=.05,p.albedoTexture=new s.Texture(o,e),p.cullBackFaces=!0,m.material=p,Promise.resolve(m)}static CreateVerticalCylinder(e,t,i,r,a){const n=s.MeshBuilder.CreateCylinder("cylinder",{diameter:2*i,height:r,tessellation:a},e),l=new s.PBRMaterial("cylinderMat",e);return l.metallic=1,l.roughness=.05,l.albedoTexture=new s.Texture(o,e),l.cullBackFaces=!0,n.material=l,Promise.resolve(n)}static CreateTerrain(e,t,i){const o=s.MeshBuilder.CreateGroundFromHeightMap("terrain","https://playground.babylonjs.com/textures/heightMap.png",{width:i,height:i,subdivisions:128,maxHeight:i/5,onReady:()=>o.updateCoordinateHeights()},e),l=new s.PBRMaterial("mat",e);return l.metallicTexture=new s.Texture(a,e),l.albedoTexture=new s.Texture(r,e),l.bumpTexture=new s.Texture(n,e),l.useRoughnessFromMetallicTextureGreen=!0,l.metallic=0,l.roughness=1,o.material=l,t.params.push(o),Promise.resolve(o)}static _ParseSDFData(e){const t=e.replace("\r","").split("\n"),i=t[0].split(" "),r=parseFloat(i[0]),a=parseFloat(i[1]),n=parseFloat(i[2]),o=t[1].split(" "),l=new s.Vector3(parseFloat(o[0]),parseFloat(o[1]),parseFloat(o[2])),h=parseFloat(t[2]),c=[];for(let e=3;e<t.length;++e){const i=t[e];0!==i.length&&c.push(parseFloat(i))}return{dimX:r,dimY:a,dimZ:n,origin:l,step:h,data:c}}static CreateMesh(e,t,i,a,n){return new Promise((o=>{const l=[s.SceneLoader.ImportMeshAsync("","src/assets/scenes/",i,e),new Promise((e=>{fetch("../src/assets/sdf/"+a).then((i=>{i.text().then((i=>{t.params.push(f._ParseSDFData(i)),e(void 0)}))}))}))];Promise.all(l).then((i=>{const a=i[0].meshes[0];if(!a.material){const t=new s.PBRMaterial("meshMat",e);t.metallic=1,t.roughness=.05,t.albedoTexture=new s.Texture(r,e),t.cullBackFaces=!0,a.material=t}n&&a.createNormals(!1),a.scaling.setAll(t.scale),o(a)}))}))}static SDBox(e,t){const i=s.TmpVectors.Vector3[0];i.copyFromFloats(Math.abs(e.x),Math.abs(e.y),Math.abs(e.z)),i.subtractInPlace(t);const r=Math.min(Math.max(i.x,i.y,i.z),0);return i.maximizeInPlaceFromFloats(0,0,0),i.length()+r}static SDSphere(e,t){return e.length()-t}static SDPlane(e,t,i){return s.Vector3.Dot(e,t)+i}static SDCutHollowSphere(e,t,i,s){const r=Math.sqrt(t*t-i*i),a=Math.sqrt(e.x*e.x+e.z*e.z),n=e.y;return i*a<r*n?Math.sqrt((a-r)*(a-r)+(n-i)*(n-i)):Math.abs(Math.sqrt(a*a+n*n)-t)-s}static SDVerticalCylinder(e,t,i){const s=Math.abs(Math.sqrt(e.x*e.x+e.z*e.z))-t,r=Math.abs(e.y)-i,a=Math.max(s,0),n=Math.max(r,0);return Math.min(Math.max(s,r),0)+Math.sqrt(a*a+n*n)}static SDTerrain(e,t,i){return e.y-i.getHeightAtCoordinates(e.x,e.z)}static SDMesh(e,t,i,s,r){const a=(e.x-r.origin.x)/r.step,n=(e.y-r.origin.y)/r.step,o=(e.z-r.origin.z)/r.step;let l=Math.floor(a),h=Math.floor(n),c=Math.floor(o);l=Math.max(Math.min(l,r.dimX-2),0),h=Math.max(Math.min(h,r.dimY-2),0),c=Math.max(Math.min(c,r.dimZ-2),0);const d=a-l,u=n-h,_=o-c,m=r.data[c*r.dimY*r.dimX+h*r.dimX+l],p=r.data[c*r.dimY*r.dimX+h*r.dimX+l+1],g=r.data[c*r.dimY*r.dimX+(h+1)*r.dimX+l+1],f=(m*(1-d)+p*d)*(1-u)+(r.data[c*r.dimY*r.dimX+(h+1)*r.dimX+l]*(1-d)+g*d)*u,b=r.data[(c+1)*r.dimY*r.dimX+h*r.dimX+l],v=r.data[(c+1)*r.dimY*r.dimX+h*r.dimX+l+1],S=r.data[(c+1)*r.dimY*r.dimX+(h+1)*r.dimX+l+1];return f*(1-_)+((b*(1-d)+v*d)*(1-u)+(r.data[(c+1)*r.dimY*r.dimX+(h+1)*r.dimX+l]*(1-d)+S*d)*u)*_}static ComputeSDFNormal(e,t,i){const r=s.TmpVectors.Vector3[5],a=s.TmpVectors.Vector3[6];i.copyFromFloats(0,0,0),r.copyFrom(e),a.copyFrom(_),i.addInPlace(a.scaleInPlace(t.sdEvaluate(r.addInPlace(h),...t.params))),r.copyFrom(e),a.copyFrom(m),i.addInPlace(a.scaleInPlace(t.sdEvaluate(r.addInPlace(c),...t.params))),r.copyFrom(e),a.copyFrom(p),i.addInPlace(a.scaleInPlace(t.sdEvaluate(r.addInPlace(d),...t.params))),r.copyFrom(e),a.copyFrom(g),i.addInPlace(a.scaleInPlace(t.sdEvaluate(r.addInPlace(u),...t.params))),s.Vector3.TransformNormalToRef(i,t.transf,i),i.normalize()}static ComputeTerrainNormal(e,t,i){t.params[1].getNormalAtCoordinatesToRef(e.x,e.z,i)}}},9820:(e,t,i)=>{i.r(t),i.d(t,{FluidSimulationDemoBase:()=>d});var s=i(6291),r=i(1063),a=i(5692),n=i(4042),o=i(4282),l=i(3179);const h=["Environment","Country","Parking","Night","Canyon","Studio"],c=["environment.env","country.env","parking.env","night.env","Runyon_Canyon_A_2k_cube_specular.env","Studio_Softbox_2Umbrellas_cube_specular.env"];class d{constructor(e,t=!1,i){var r,a;this._scene=e,this._engine=e.getEngine(),this._fluidRenderer=e.enableFluidRenderer(),this._numParticles=6e3,this._paused=!1,this._gui=null,this._fluidRendererGUI=null,this._sceneObserver=null,this._fluidSim=null,this._particleGenerator=null,this._loadParticlesFromFile=void 0!==i,this._shapeCollisionRestitution=.999,this._collisionObjectPromises=[],this._collisionObjects=[],this._environmentFile="Environment",this._fluidSimGUIElements=[],this._noFluidSimulation=t;const l=null!==(a=null===(r=e.activeCameras)||void 0===r?void 0:r[0])&&void 0!==a?a:e.activeCamera;l.storeState(),this._fluidRenderObject=this._fluidRenderer.addVertexBuffer({},0,!1,void 0,l),this._fluidRenderObject.targetRenderer.enableBlurDepth=!0,this._fluidRenderObject.targetRenderer.blurDepthFilterSize=20,this._fluidRenderObject.targetRenderer.blurDepthNumIterations=5,this._fluidRenderObject.targetRenderer.blurDepthDepthScale=10,this._fluidRenderObject.targetRenderer.fluidColor=new s.Color3(.5,.8,.95),this._fluidRenderObject.targetRenderer.density=2.2,this._fluidRenderObject.targetRenderer.refractionStrength=.02,this._fluidRenderObject.targetRenderer.specularPower=150,this._fluidRenderObject.targetRenderer.blurThicknessFilterSize=10,this._fluidRenderObject.targetRenderer.blurThicknessNumIterations=2,this._fluidRenderObject.targetRenderer.dirLight=new s.Vector3(2,-1,1),this._fluidRenderObject.object.particleSize=.08,this._fluidRenderObject.object.particleThicknessAlpha=this._fluidRenderObject.object.particleSize,this._fluidRenderObject.object.useVelocity=this._fluidRenderObject.targetRenderer.useVelocity,this._fluidRenderObject.targetRenderer.minimumThickness=this._fluidRenderObject.object.particleThicknessAlpha/2,t||(this._fluidSim=new n.FluidSimulator,this._fluidSim.smoothingRadius=.04,this._fluidSim.maxVelocity=3,window.fsim=this._fluidSim,this._particleGenerator=new o.ParticleGenerator(this._scene,i),this._particleGenerator.particleRadius=this._fluidSim.smoothingRadius/2,this._particleGenerator.position.y=.5)}static AddDemo(e,t){d._DemoList.push({name:e,factory:t})}static StartDemo(e){var t;null===(t=d._CurrentDemo)||void 0===t||t.dispose(),d._CurrentDemoIndex=e,d._CurrentDemo=d._DemoList[e].factory(),d._CurrentDemo.run()}_setEnvironment(){const e=h.indexOf(this._environmentFile);this._scene.environmentTexture=s.CubeTexture.CreateFromPrefilteredData("https://playground.babylonjs.com/textures/"+c[e],this._scene),this._scene.createDefaultSkybox(this._scene.environmentTexture)}async run(){this._setEnvironment(),this._collisionObjects=await Promise.all(this._collisionObjectPromises),this._run()}async _run(){await this._generateParticles(),this._particleGenerator&&this._loadParticlesFromFile&&(this._numParticles=this._particleGenerator.currNumParticles),this._fluidRendererGUI=new a.FluidRendererGUI(this._scene,!1),this._makeGUI(),this._noFluidSimulation||(this._sceneObserver=this._scene.onBeforeRenderObservable.add((()=>{this._fluidSim.currentNumParticles=Math.min(this._numParticles,this._particleGenerator.currNumParticles),this._fluidRenderObject.object.setNumParticles(this._fluidSim.currentNumParticles),this._paused||(this._fluidSim.update(.01),this._checkCollisions(this._fluidRenderObject.object.particleSize/2)),this._fluidRenderObject&&this._fluidRenderObject.object.vertexBuffers.position&&(this._fluidRenderObject.object.vertexBuffers.position.updateDirectly(this._fluidSim.positions,0),this._fluidRenderObject.object.vertexBuffers.velocity.updateDirectly(this._fluidSim.velocities,0))})))}disposeCollisionObject(e){var t,i,s;const r=this._collisionObjects[e][1];null===(i=null===(t=null==r?void 0:r.mesh)||void 0===t?void 0:t.material)||void 0===i||i.dispose(),null===(s=null==r?void 0:r.mesh)||void 0===s||s.dispose(),this._collisionObjects.splice(e,1),this._collisionObjectPromises.splice(e,1)}dispose(){for(var e,t,i,s,r,a;this._collisionObjects.length>0;)this.disposeCollisionObject(0);this._scene.onBeforeRenderObservable.remove(this._sceneObserver),null===(e=this._fluidRendererGUI)||void 0===e||e.dispose(),null===(t=this._gui)||void 0===t||t.destroy(),null===(i=this._fluidSim)||void 0===i||i.dispose(),null===(s=this._particleGenerator)||void 0===s||s.dispose(),this._fluidRenderer.removeRenderObject(this._fluidRenderObject),(null!==(a=null===(r=this._scene.activeCameras)||void 0===r?void 0:r[0])&&void 0!==a?a:this._scene.activeCamera)._restoreStateValues()}addCollisionSphere(e,t,i=new s.Vector3(0,1,0),r,a){const n={params:[t],createMesh:l.SDFHelper.CreateSphere,sdEvaluate:l.SDFHelper.SDSphere,computeNormal:l.SDFHelper.ComputeSDFNormal,position:e.clone(),mesh:null,transf:new s.Matrix,scale:1,invTransf:new s.Matrix,dragPlane:i,collisionRestitution:r},o=a?Promise.resolve([null,n]):this._createMeshForCollision(n);return this._collisionObjectPromises.push(o),o}addCollisionBox(e,t,i,r=new s.Vector3(0,1,0),a,n){const o={params:[i.clone()],createMesh:l.SDFHelper.CreateBox,sdEvaluate:l.SDFHelper.SDBox,computeNormal:l.SDFHelper.ComputeSDFNormal,rotation:t.clone(),position:e.clone(),mesh:null,transf:new s.Matrix,scale:1,invTransf:new s.Matrix,dragPlane:r,collisionRestitution:a},h=n?Promise.resolve([null,o]):this._createMeshForCollision(o);return this._collisionObjectPromises.push(h),h}addCollisionPlane(e,t,i){const r={params:[e.clone(),t],sdEvaluate:l.SDFHelper.SDPlane,computeNormal:l.SDFHelper.ComputeSDFNormal,mesh:null,position:new s.Vector3(0,0,0),rotation:new s.Vector3(0,0,0),transf:s.Matrix.Identity(),scale:1,invTransf:s.Matrix.Identity(),dragPlane:null,collisionRestitution:i},a=Promise.resolve([null,r]);return this._collisionObjectPromises.push(a),a}addCollisionCutHollowSphere(e,t,i,r,a,n,o=new s.Vector3(0,1,0),h,c){const d={params:[i,r,a,n],createMesh:l.SDFHelper.CreateCutHollowSphere,sdEvaluate:l.SDFHelper.SDCutHollowSphere,computeNormal:l.SDFHelper.ComputeSDFNormal,rotation:t.clone(),position:e.clone(),mesh:null,transf:new s.Matrix,scale:1,invTransf:new s.Matrix,dragPlane:o,collisionRestitution:h},u=c?Promise.resolve([null,d]):this._createMeshForCollision(d);return this._collisionObjectPromises.push(u),u}addCollisionVerticalCylinder(e,t,i,r,a,n=new s.Vector3(0,1,0),o,h){const c={params:[i,r,a],createMesh:l.SDFHelper.CreateVerticalCylinder,sdEvaluate:l.SDFHelper.SDVerticalCylinder,computeNormal:l.SDFHelper.ComputeSDFNormal,rotation:t.clone(),position:e.clone(),mesh:null,transf:new s.Matrix,scale:1,invTransf:new s.Matrix,dragPlane:n,collisionRestitution:o},d=h?Promise.resolve([null,c]):this._createMeshForCollision(c);return this._collisionObjectPromises.push(d),d}addCollisionMesh(e,t,i,r,a=!1,n=1,o=new s.Vector3(0,1,0),h,c){const d={params:[i,r,a],createMesh:l.SDFHelper.CreateMesh,sdEvaluate:l.SDFHelper.SDMesh,computeNormal:l.SDFHelper.ComputeSDFNormal,rotation:t.clone(),position:e.clone(),mesh:null,transf:new s.Matrix,scale:n,invTransf:new s.Matrix,dragPlane:o,collisionRestitution:h},u=c?Promise.resolve([null,d]):this._createMeshForCollision(d);return this._collisionObjectPromises.push(u),u}addCollisionTerrain(e){const t={params:[e],createMesh:l.SDFHelper.CreateTerrain,sdEvaluate:l.SDFHelper.SDTerrain,computeNormal:l.SDFHelper.ComputeTerrainNormal,mesh:null,transf:new s.Matrix,scale:1,invTransf:new s.Matrix,dragPlane:null},i=this._createMeshForCollision(t);return this._collisionObjectPromises.push(i),i}async _createMeshForCollision(e){var t,i,r,a;const n=await(null===(t=e.createMesh)||void 0===t?void 0:t.call(e,this._scene,e,...e.params));if(e.position=null!==(i=e.position)&&void 0!==i?i:new s.Vector3(0,0,0),e.rotation||e.rotationQuaternion||(e.rotation=new s.Vector3(0,0,0)),!n)return[null,e];if(n.position=e.position,e.rotation?n.rotation=e.rotation:n.rotationQuaternion=e.rotationQuaternion,e.mesh=n,e.dragPlane){const t=null!==(a=null===(r=this._scene.activeCameras)||void 0===r?void 0:r[0])&&void 0!==a?a:this._scene.activeCamera,i=new s.PointerDragBehavior({dragPlaneNormal:e.dragPlane});i.useObjectOrientationForDragging=!1,i.onDragStartObservable.add((()=>{t.detachControl()})),i.onDragEndObservable.add((()=>{t.attachControl()})),n.addBehavior(i)}return[n,e]}async _generateParticles(e=!0){var t,i,r;await(null===(t=this._particleGenerator)||void 0===t?void 0:t.generateParticles(this._numParticles,e)),this._fluidSim&&this._particleGenerator&&this._fluidSim.positions!==this._particleGenerator.positions&&(this._fluidSim.setParticleData(this._particleGenerator.positions,this._particleGenerator.velocities),null===(i=this._fluidRenderObject.object.vertexBuffers.position)||void 0===i||i.dispose(),null===(r=this._fluidRenderObject.object.vertexBuffers.velocity)||void 0===r||r.dispose(),this._fluidRenderObject.object.vertexBuffers.position=new s.VertexBuffer(this._engine,this._fluidSim.positions,s.VertexBuffer.PositionKind,!0,!1,3,!0),this._fluidRenderObject.object.vertexBuffers.velocity=new s.VertexBuffer(this._engine,this._fluidSim.velocities,"velocity",!0,!1,3,!0))}_makeGUIMainMenu(){}_syncFluidSimGUI(){for(const[e,t,i]of this._fluidSimGUIElements)e.object[e.property]=t[i],e.updateDisplay()}_makeGUI(){var e,t,i,s,a,n,o;this._gui=new r.XS({title:"Demo"}),this._gui.domElement.style.marginTop="60px",this._gui.domElement.style.left="20px",this._gui.domElement.id="simGUI";const l={demo:d._DemoList[d._CurrentDemoIndex].name,environment:this._environmentFile,paused:!1,numParticles:this._numParticles,smoothingRadius:null===(e=this._fluidSim)||void 0===e?void 0:e.smoothingRadius,densityReference:null===(t=this._fluidSim)||void 0===t?void 0:t.densityReference,pressureConstant:null===(i=this._fluidSim)||void 0===i?void 0:i.pressureConstant,viscosity:null===(s=this._fluidSim)||void 0===s?void 0:s.viscosity,minTimeStep:null===(a=this._fluidSim)||void 0===a?void 0:a.minTimeStep,maxVelocity:null===(n=this._fluidSim)||void 0===n?void 0:n.maxVelocity,maxAcceleration:null===(o=this._fluidSim)||void 0===o?void 0:o.maxAcceleration,shapeCollisionRestitution:this._shapeCollisionRestitution},c=[];for(const e of d._DemoList)c.push(e.name);if(this._gui.add(l,"demo",c).name("Name").onChange((e=>{for(let t=0;t<d._DemoList.length;++t)if(d._DemoList[t].name===e){d.StartDemo(t);break}})),this._gui.add(l,"environment",h).name("Environment").onChange((e=>{this._environmentFile=e,this._setEnvironment()})),this._makeGUIMainMenu(),this._fluidSim&&this._particleGenerator){const e=this._gui.addFolder("Fluid Simulator");e.$title.style.fontWeight="bold",this._fluidSimGUIElements.push([e.add(l,"numParticles",0,4e4,88).name("Num particles").onChange((e=>{this._numParticles=e,this._generateParticles(!1)})),this,"_numParticles"]),this._fluidSimGUIElements.push([e.add(l,"smoothingRadius",0,2,.001).name("Smoothing radius").onChange((e=>{this._fluidSim.smoothingRadius=e||.04,this._particleGenerator.particleRadius=this._fluidSim.smoothingRadius/2})),this._fluidSim,"smoothingRadius"]),this._fluidSimGUIElements.push([e.add(l,"densityReference",0,5e4,100).name("Density reference").onChange((e=>{this._fluidSim.densityReference=e})),this._fluidSim,"densityReference"]),this._fluidSimGUIElements.push([e.add(l,"pressureConstant",0,100,1).name("Pressure constant").onChange((e=>{this._fluidSim.pressureConstant=e})),this._fluidSim,"pressureConstant"]),this._fluidSimGUIElements.push([e.add(l,"viscosity",0,.1,.001).name("Viscosity").onChange((e=>{this._fluidSim.viscosity=e})),this._fluidSim,"viscosity"]),this._fluidSimGUIElements.push([e.add(l,"maxVelocity",0,20,1).name("Max velocity").onChange((e=>{this._fluidSim.maxVelocity=e})),this._fluidSim,"maxVelocity"]),this._fluidSimGUIElements.push([e.add(l,"maxAcceleration",0,1e5,10).name("Max acceleration").onChange((e=>{this._fluidSim.maxAcceleration=e})),this._fluidSim,"maxAcceleration"]),this._fluidSimGUIElements.push([e.add(l,"minTimeStep",0,.01,1e-5).name("Min time step").onChange((e=>{this._fluidSim.minTimeStep=e})),this._fluidSim,"minTimeStep"]),this._fluidSimGUIElements.push([e.add(l,"shapeCollisionRestitution",0,1,.001).name("Collision restitution").onChange((e=>{this._shapeCollisionRestitution=e})),this,"_shapeCollisionRestitution"]),e.add(l,"paused").name("Pause").onChange((e=>{this._onPaused(e)})),e.open()}}_onPaused(e){this._paused=e}_checkCollisions(e){var t,i,r,a,n,o,l,h,c,d,u,_;if(0===this._collisionObjects.length)return;const m=this._fluidSim.positions,p=this._fluidSim.velocities,g=s.TmpVectors.Quaternion[0],f=s.TmpVectors.Vector3[0];f.copyFromFloats(1,1,1);for(let e=0;e<this._collisionObjects.length;++e){const _=this._collisionObjects[e][1],m=null!==(r=null!==(i=null===(t=_.mesh)||void 0===t?void 0:t.rotationQuaternion)&&void 0!==i?i:_.rotationQuaternion)&&void 0!==r?r:s.Quaternion.FromEulerAnglesToRef(null!==(n=null===(a=_.mesh)||void 0===a?void 0:a.rotation.x)&&void 0!==n?n:_.rotation.x,null!==(l=null===(o=_.mesh)||void 0===o?void 0:o.rotation.y)&&void 0!==l?l:_.rotation.y,null!==(c=null===(h=_.mesh)||void 0===h?void 0:h.rotation.z)&&void 0!==c?c:_.rotation.z,g);s.Matrix.ComposeToRef(f,m,null!==(u=null===(d=_.mesh)||void 0===d?void 0:d.position)&&void 0!==u?u:_.position,_.transf),_.transf.invertToRef(_.invTransf)}const b=s.TmpVectors.Vector3[4],v=s.TmpVectors.Vector3[7];for(let t=0;t<this._fluidSim.currentNumParticles;++t){const i=m[3*t+0],r=m[3*t+1],a=m[3*t+2];for(let n=0;n<this._collisionObjects.length;++n){const o=this._collisionObjects[n][1];if(o.disabled)continue;b.copyFromFloats(i,r,a),s.Vector3.TransformCoordinatesToRef(b,o.invTransf,b),b.scaleInPlace(1/o.scale);const l=o.scale*o.sdEvaluate(b,...o.params)-e;if(l<0){o.computeNormal(b,o,v);const e=null!==(_=o.collisionRestitution)&&void 0!==_?_:this._shapeCollisionRestitution,i=p[3*t+0]*v.x+p[3*t+1]*v.y+p[3*t+2]*v.z;p[3*t+0]=(p[3*t+0]-2*i*v.x)*e,p[3*t+1]=(p[3*t+1]-2*i*v.y)*e,p[3*t+2]=(p[3*t+2]-2*i*v.z)*e,m[3*t+0]-=v.x*l,m[3*t+1]-=v.y*l,m[3*t+2]-=v.z*l}}}}}d._DemoList=[]}}]);
//# sourceMappingURL=820.109cfd5b22a009053dd0.js.map