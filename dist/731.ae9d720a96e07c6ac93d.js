"use strict";(self.webpackChunkbabylonjs_fluid_rendering=self.webpackChunkbabylonjs_fluid_rendering||[]).push([[731],{3731:(e,t,r)=>{r.r(t),r.d(t,{FluidRenderingRenderTarget:()=>i});var s=r(6291);class i{constructor(e,t,r,i,l,u,n=s.Constants.TEXTURETYPE_FLOAT,a=s.Constants.TEXTUREFORMAT_R,o=s.Constants.TEXTURETYPE_FLOAT,h=s.Constants.TEXTUREFORMAT_R,_=!1,d=null,x=!0,p=1){this.enableBlur=!0,this.blurSizeDivisor=1,this.blurFilterSize=7,this._blurNumIterations=3,this.blurMaxFilterSize=100,this.blurDepthScale=10,this.particleSize=.02,this.onDisposeObservable=new s.Observable,this._name=e,this._scene=t,this._camera=d,this._engine=t.getEngine(),this._width=r,this._height=i,this._blurTextureSizeX=l,this._blurTextureSizeY=u,this._textureType=n,this._textureFormat=a,this._blurTextureType=o,this._blurTextureFormat=h,this._useStandardBlur=_,this._generateDepthBuffer=x,this._samples=p,this._postProcessRunningIndex=0,this.enableBlur=0!==l&&0!==u,this._rt=null,this._texture=null,this._rtBlur=null,this._textureBlurred=null,this._blurPostProcesses=null}get blurNumIterations(){return this._blurNumIterations}set blurNumIterations(e){if(this._blurNumIterations!==e&&(this._blurNumIterations=e,null!==this._blurPostProcesses)){const e=this._blurPostProcesses[0],t=this._blurPostProcesses[1];this._blurPostProcesses=[...Array(2*this._blurNumIterations).keys()].map((r=>1&r?t:e))}}get renderTarget(){return this._rt}get renderTargetBlur(){return this._rtBlur}get texture(){return this._texture}get textureBlur(){return this._textureBlurred}initialize(){if(this.dispose(),this._createRenderTarget(),this.enableBlur&&this._texture){const[e,t,r]=this._createBlurPostProcesses(this._texture,this._blurTextureType,this._blurTextureFormat,this.blurSizeDivisor,this._name,this._useStandardBlur);this._rtBlur=e,this._textureBlurred=t,this._blurPostProcesses=r}}applyBlurPostProcesses(){this.enableBlur&&this._blurPostProcesses&&(this._postProcessRunningIndex=0,this._scene.postProcessManager.directRender(this._blurPostProcesses,this._rtBlur,!0),this._engine.unBindFramebuffer(this._rtBlur))}_createRenderTarget(){this._rt=this._engine.createRenderTargetTexture({width:this._width,height:this._height},{generateMipMaps:!1,type:this._textureType,format:this._textureFormat,samplingMode:s.Constants.TEXTURE_NEAREST_SAMPLINGMODE,generateDepthBuffer:this._generateDepthBuffer,generateStencilBuffer:!1,samples:this._samples});const e=this._rt.texture;this._texture=new s.Texture(null,this._scene),this._texture.name="rtt"+this._name,this._texture._texture=e,this._texture.wrapU=s.Texture.CLAMP_ADDRESSMODE,this._texture.wrapV=s.Texture.CLAMP_ADDRESSMODE,this._texture.anisotropicFilteringLevel=1}_createBlurPostProcesses(e,t,r,i,l,u=!1){const n=this._scene.getEngine(),a=new s.Vector2(Math.floor(this._blurTextureSizeX/i),Math.floor(this._blurTextureSizeY/i)),o=t===s.Constants.TEXTURETYPE_FLOAT&&n.getCaps().textureFloatLinearFiltering||t===s.Constants.TEXTURETYPE_HALF_FLOAT&&n.getCaps().textureHalfFloatLinearFiltering,h=this._engine.createRenderTargetTexture({width:a.x,height:a.y},{generateMipMaps:!1,type:t,format:r,samplingMode:o?s.Constants.TEXTURE_BILINEAR_SAMPLINGMODE:s.Constants.TEXTURE_NEAREST_SAMPLINGMODE,generateDepthBuffer:!1,generateStencilBuffer:!1,samples:this._samples}),_=h.texture,d=new s.Texture(null,this._scene);if(d.name="rttBlurred"+l,d._texture=_,d.wrapU=s.Texture.CLAMP_ADDRESSMODE,d.wrapV=s.Texture.CLAMP_ADDRESSMODE,d.anisotropicFilteringLevel=1,u){const i=new s.PostProcess("BilateralBlurX","standardBlur",["filterSize","blurDir"],null,1,null,s.Constants.TEXTURE_NEAREST_SAMPLINGMODE,n,!0,null,t,void 0,void 0,void 0,r);i.samples=this._samples,i.externalTextureSamplerBinding=!0,i.onApplyObservable.add((t=>{0===this._postProcessRunningIndex?t.setTexture("textureSampler",e):t._bindTexture("textureSampler",i.inputTexture.texture),t.setInt("filterSize",this.blurFilterSize),t.setFloat2("blurDir",1/this._blurTextureSizeX,0),this._postProcessRunningIndex++})),i.onSizeChangedObservable.add((()=>{i._textures.forEach((e=>{e.texture.wrapU=s.Texture.CLAMP_ADDRESSMODE,e.texture.wrapV=s.Texture.CLAMP_ADDRESSMODE}))})),this._fixReusablePostProcess(i);const l=new s.PostProcess("BilateralBlurY","standardBlur",["filterSize","blurDir"],null,1,null,s.Constants.TEXTURE_NEAREST_SAMPLINGMODE,n,!0,null,t,void 0,void 0,void 0,r);return l.samples=this._samples,l.onApplyObservable.add((e=>{e.setInt("filterSize",this.blurFilterSize),e.setFloat2("blurDir",0,1/this._blurTextureSizeY),this._postProcessRunningIndex++})),l.onSizeChangedObservable.add((()=>{l._textures.forEach((e=>{e.texture.wrapU=s.Texture.CLAMP_ADDRESSMODE,e.texture.wrapV=s.Texture.CLAMP_ADDRESSMODE}))})),this._fixReusablePostProcess(l),i.autoClear=!1,l.autoClear=!1,[h,d,[...Array(2*this._blurNumIterations).keys()].map((e=>1&e?l:i))]}{const i=["maxFilterSize","blurDir","projectedParticleConstant","depthThreshold"],l=new s.PostProcess("BilateralBlurX","bilateralBlur",i,null,1,null,s.Constants.TEXTURE_NEAREST_SAMPLINGMODE,n,!0,null,t,void 0,void 0,void 0,r);l.samples=this._samples,l.externalTextureSamplerBinding=!0,l.onApplyObservable.add((t=>{0===this._postProcessRunningIndex?t.setTexture("textureSampler",e):t._bindTexture("textureSampler",l.inputTexture.texture),t.setInt("maxFilterSize",this.blurMaxFilterSize),t.setFloat2("blurDir",1/this._blurTextureSizeX,0),t.setFloat("projectedParticleConstant",this._getProjectedParticleConstant()),t.setFloat("depthThreshold",this._getDepthThreshold()),this._postProcessRunningIndex++})),l.onSizeChangedObservable.add((()=>{l._textures.forEach((e=>{e.texture.wrapU=s.Texture.CLAMP_ADDRESSMODE,e.texture.wrapV=s.Texture.CLAMP_ADDRESSMODE}))})),this._fixReusablePostProcess(l);const u=new s.PostProcess("BilateralBlurY","bilateralBlur",i,null,1,null,s.Constants.TEXTURE_NEAREST_SAMPLINGMODE,n,!0,null,t,void 0,void 0,void 0,r);return u.samples=this._samples,u.onApplyObservable.add((e=>{e.setInt("maxFilterSize",this.blurMaxFilterSize),e.setFloat2("blurDir",0,1/this._blurTextureSizeY),e.setFloat("projectedParticleConstant",this._getProjectedParticleConstant()),e.setFloat("depthThreshold",this._getDepthThreshold()),this._postProcessRunningIndex++})),u.onSizeChangedObservable.add((()=>{u._textures.forEach((e=>{e.texture.wrapU=s.Texture.CLAMP_ADDRESSMODE,e.texture.wrapV=s.Texture.CLAMP_ADDRESSMODE}))})),this._fixReusablePostProcess(u),l.autoClear=!1,u.autoClear=!1,[h,d,[...Array(2*this._blurNumIterations).keys()].map((e=>1&e?u:l))]}}_fixReusablePostProcess(e){e.isReusable()&&(e.onActivateObservable.add((()=>{e._currentRenderTextureInd=(e._currentRenderTextureInd+1)%2})),e.onApplyObservable.add((()=>{e._currentRenderTextureInd=(e._currentRenderTextureInd+1)%2})))}_getProjectedParticleConstant(){var e,t;return this.blurFilterSize*this.particleSize*.05*(this._height/2)/Math.tan((null!==(t=null===(e=this._camera)||void 0===e?void 0:e.fov)&&void 0!==t?t:45*Math.PI/180)/2)}_getDepthThreshold(){return this.particleSize/2*this.blurDepthScale}dispose(){var e,t;this.onDisposeObservable.hasObservers()&&this.onDisposeObservable.notifyObservers(this),null===(e=this._rt)||void 0===e||e.dispose(),this._rt=null,null===(t=this._rtBlur)||void 0===t||t.dispose(),this._rtBlur=null,this._blurPostProcesses&&(this._blurPostProcesses[0].dispose(),this._blurPostProcesses[1].dispose()),this._blurPostProcesses=null}}}}]);
//# sourceMappingURL=731.ae9d720a96e07c6ac93d.js.map