{"version":3,"file":"553.8d09424ca4593ed27f48.js","mappings":"yNAMO,MAAMA,UAA+C,EAAAC,wBAGxDC,YAAYC,GACRC,MAAMD,GAAO,GAEbE,KAAKC,WAAa,GAGZC,a,QACN,MAAMC,EAC4B,QAA9B,EAAyB,QAAzB,EAAAH,KAAKI,OAAOC,qBAAa,eAAG,UAAE,QAAIL,KAAKI,OAAOE,aAE9CH,IACCA,EAAmCI,OAAS,KAC5CJ,EAAmCK,KAAO,MAC1CL,EAAmCM,OAAS,OAGjD,MACMC,EAAuC,GAE7C,IAAIC,EAAe,EAGnB,IAAK,IAAIC,EAAI,EAAGA,EANE,MAMeA,EAAG,CAChC,MAAMC,EAAM,OAASD,EAAI,GACnBE,cACIC,MACF,+CACIF,EAAIG,UAAUH,EAAII,OAAS,GAC3B,SAEVC,cACIC,EAAW,IAAIC,YAAYN,GAC3BO,EAAc,IAAIC,aAAaR,GAErCH,EAAeQ,EAAS,GAGxB,MAAMI,EAAY,IAAID,aAA4B,EAAfX,GAEnC,IAAK,IAAIC,EAAI,EAAGA,EAAID,IAAgBC,EAAG,CACnC,MAAMY,EAAIH,EAAY,EAAQ,EAAJT,EAAQ,GAC5Ba,EAAIJ,EAAY,EAAQ,EAAJT,EAAQ,GAC5Bc,EAAIL,EAAY,EAAQ,EAAJT,EAAQ,GAElCW,EAAc,EAAJX,EAAQ,GAAKY,EACvBD,EAAc,EAAJX,EAAQ,GAAKa,EACvBF,EAAc,EAAJX,EAAQ,IAAMc,EAG5BhB,EAAgBiB,KAAKJ,GAGzBvB,KAAK4B,mBAAmBC,OAAOC,cAAwB,SACnD,IAAI,eACA9B,KAAK+B,QACLrB,EAAgB,GAChB,6BACA,GACA,EACA,GACA,GAIJV,KAAK4B,mBAAmBC,OAC1BG,gBAAgBrB,GAElBX,KAAK4B,mBAAmBC,OAAOI,aAAe,IAC9CjC,KAAK4B,mBAAmBC,OAAOK,uBAAyB,KACxDlC,KAAK4B,mBAAmBO,eAAeC,iBAAmB,EAC1DpC,KAAK4B,mBAAmBO,eAAeE,oBAAsB,GAC7DrC,KAAK4B,mBAAmBO,eAAeG,oBAAsB,GAC7DtC,KAAK4B,mBAAmBO,eAAeI,iBAAmB,IAC1DvC,KAAK4B,mBAAmBO,eAAeK,mBAAqB,GAC5DxC,KAAK4B,mBAAmBO,eAAeM,wBAA0B,EACjEzC,KAAK4B,mBAAmBO,eAAeO,2BAA6B,EACpE1C,KAAK4B,mBAAmBO,eAAeQ,QAAU,EACjD3C,KAAK4B,mBAAmBO,eAAeS,cAAgB,IAEvD,IAAIC,EAAI,EAER7C,KAAK8C,eAAiB9C,KAAKI,OAAO2C,yBAAyBC,KAAI,KAC3DhD,KAAK4B,mBAAmBC,OAAOC,cACjB,SACZmB,eAAevC,EAAgBwC,KAAKC,MAAMN,IAAK,GACjDA,GAAK7C,KAAKC,WACN4C,GAtEU,MAuEVA,EAAI,MAIZ9C,MAAMqD,OAGAC,mBACN,MAAMC,EAAS,CACXC,UAAWvD,KAAKC,YAGHD,KAAKwD,KAGjBR,IAAIM,EAAQ,YAAa,EAAG,EAAG,IAC/BG,KAAK,mBACLC,UAAUC,IACP3D,KAAKC,WAAa0D","sources":["webpack://babylonjs-fluid-rendering/./src/scenes/fluidSimulationDemoPrecomputeRendering.ts"],"sourcesContent":["import * as BABYLON from \"@babylonjs/core\";\r\nimport { FluidRenderingObjectVertexBuffer } from \"./FluidRenderer/fluidRenderingObjectVertexBuffer\";\r\n\r\nimport { FluidSimulationDemoBase } from \"./fluidSimulationDemoBase\";\r\n\r\n// Pre-computed frames come from https://github.com/ttnghia/RealTimeFluidRendering/releases/tag/Datasets\r\nexport class FluidSimulationDemoPrecomputeRendering extends FluidSimulationDemoBase {\r\n    private _animSpeed: number;\r\n\r\n    constructor(scene: BABYLON.Scene) {\r\n        super(scene, true);\r\n\r\n        this._animSpeed = 0.5;\r\n    }\r\n\r\n    protected async _run() {\r\n        const camera =\r\n            this._scene.activeCameras?.[0] ?? this._scene.activeCamera;\r\n\r\n        if (camera) {\r\n            (camera as BABYLON.ArcRotateCamera).alpha = -0.631;\r\n            (camera as BABYLON.ArcRotateCamera).beta = 1.318;\r\n            (camera as BABYLON.ArcRotateCamera).radius = 1.866;\r\n        }\r\n\r\n        const numFrames = 160;\r\n        const positionBuffers: Array<Float32Array> = [];\r\n\r\n        let numParticles = 0;\r\n        //let particleRadius = 0;\r\n\r\n        for (let i = 0; i < numFrames; ++i) {\r\n            const num = \"000\" + (i + 1);\r\n            const buffer = await (\r\n                await fetch(\r\n                    \"src/assets/particles/SphereDropGround/frame.\" +\r\n                        num.substring(num.length - 4) +\r\n                        \".pos\"\r\n                )\r\n            ).arrayBuffer();\r\n            const buffer32 = new Uint32Array(buffer);\r\n            const bufferFloat = new Float32Array(buffer);\r\n\r\n            numParticles = buffer32[0];\r\n            //particleRadius = bufferFloat[1];\r\n\r\n            const positions = new Float32Array(numParticles * 3);\r\n\r\n            for (let i = 0; i < numParticles; ++i) {\r\n                const x = bufferFloat[2 + i * 3 + 0];\r\n                const y = bufferFloat[2 + i * 3 + 1];\r\n                const z = bufferFloat[2 + i * 3 + 2];\r\n\r\n                positions[i * 3 + 0] = x;\r\n                positions[i * 3 + 1] = y;\r\n                positions[i * 3 + 2] = -z;\r\n            }\r\n\r\n            positionBuffers.push(positions);\r\n        }\r\n\r\n        this._fluidRenderObject.object.vertexBuffers[\"position\"] =\r\n            new BABYLON.VertexBuffer(\r\n                this._engine,\r\n                positionBuffers[0],\r\n                BABYLON.VertexBuffer.PositionKind,\r\n                true,\r\n                false,\r\n                3,\r\n                true\r\n            );\r\n\r\n        (\r\n            this._fluidRenderObject.object as FluidRenderingObjectVertexBuffer\r\n        ).setNumParticles(numParticles);\r\n\r\n        this._fluidRenderObject.object.particleSize = 0.03;\r\n        this._fluidRenderObject.object.particleThicknessAlpha = 0.007;\r\n        this._fluidRenderObject.targetRenderer.minimumThickness = 0;\r\n        this._fluidRenderObject.targetRenderer.blurDepthFilterSize = 10;\r\n        this._fluidRenderObject.targetRenderer.blurDepthDepthScale = 10;\r\n        this._fluidRenderObject.targetRenderer.thicknessMapSize = 256;\r\n        this._fluidRenderObject.targetRenderer.refractionStrength = 0.1;\r\n        this._fluidRenderObject.targetRenderer.blurThicknessFilterSize = 5;\r\n        this._fluidRenderObject.targetRenderer.blurThicknessNumIterations = 1;\r\n        this._fluidRenderObject.targetRenderer.density = 3;\r\n        this._fluidRenderObject.targetRenderer.specularPower = 250;\r\n\r\n        let t = 0;\r\n\r\n        this._sceneObserver = this._scene.onBeforeRenderObservable.add(() => {\r\n            this._fluidRenderObject.object.vertexBuffers[\r\n                \"position\"\r\n            ].updateDirectly(positionBuffers[Math.floor(t)], 0);\r\n            t += this._animSpeed;\r\n            if (t >= numFrames) {\r\n                t = 0;\r\n            }\r\n        });\r\n\r\n        super._run();\r\n    }\r\n\r\n    protected _makeGUIMainMenu(): void {\r\n        const params = {\r\n            animSpeed: this._animSpeed,\r\n        };\r\n\r\n        const mainMenu = this._gui!;\r\n\r\n        mainMenu\r\n            .add(params, \"animSpeed\", 0, 1, 0.1)\r\n            .name(\"Animation speed\")\r\n            .onChange((value: any) => {\r\n                this._animSpeed = value;\r\n            });\r\n    }\r\n}\r\n"],"names":["FluidSimulationDemoPrecomputeRendering","FluidSimulationDemoBase","constructor","scene","super","this","_animSpeed","async","camera","_scene","activeCameras","activeCamera","alpha","beta","radius","positionBuffers","numParticles","i","num","buffer","fetch","substring","length","arrayBuffer","buffer32","Uint32Array","bufferFloat","Float32Array","positions","x","y","z","push","_fluidRenderObject","object","vertexBuffers","_engine","setNumParticles","particleSize","particleThicknessAlpha","targetRenderer","minimumThickness","blurDepthFilterSize","blurDepthDepthScale","thicknessMapSize","refractionStrength","blurThicknessFilterSize","blurThicknessNumIterations","density","specularPower","t","_sceneObserver","onBeforeRenderObservable","add","updateDirectly","Math","floor","_run","_makeGUIMainMenu","params","animSpeed","_gui","name","onChange","value"],"sourceRoot":""}